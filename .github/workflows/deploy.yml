name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SERVICE_NAME: fly-island-app-service
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Install gke-gcloud-auth-plugin and kubectl
        run: |
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          sudo apt-get install apt-transport-https ca-certificates -y
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
          sudo apt-get update
          sudo apt-get install -y google-cloud-cli-gke-gcloud-auth-plugin kubectl

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_SA_GH_SECRET }} # Use the service account key

      - name: Authenticate to Google Container Registry
        run: gcloud auth configure-docker --quiet

      - name: Build and push Docker image
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/flies:$GITHUB_SHA .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/flies:$GITHUB_SHA

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_GH_SECRET }}
          export_default_credentials: true

      - name: Generate deployment YAML
        run: |
          cat <<EOF > deployment.yaml
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: flies-deployment
          spec:
            replicas: 3
            selector:
              matchLabels:
                app: flies
            template:
              metadata:
                labels:
                  app: flies
              spec:
                containers:
                - name: flies
                  image: gcr.io/${{ secrets.GCP_PROJECT_ID }}/flies:$GITHUB_SHA
                  ports:
                  - containerPort: 80
          EOF

      - name: Get credentials for GKE
        run: |
          gcloud container clusters get-credentials swarm --zone us-central1-a 

      - name: Check network connectivity to Kubernetes API server
        run: curl -vk https://35.239.218.8:443
  
      - name: Verify kubectl context
        run: kubectl config current-context

      - name: Check API server status
        run: kubectl get pods -n kube-system -l component=kube-apiserver


      - name: Deploy to GKE
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml 

      - name: Trigger pipeline status update
        run: |
          kubectl wait --for=condition=Ready service/${{ env.SERVICE_NAME }} --timeout=5m
          IP_ADDRESS=$(kubectl get service ${{ env.SERVICE_NAME }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')  
          PORT=$(kubectl get service fly-island-app-service -o jsonpath='{.spec.ports[0].port}')
          echo "Your Flask app is running at: http://$IP_ADDRESS:$PORT"
          curl -X POST http://$IP_ADDRESS:$PORT/update_pipeline_status